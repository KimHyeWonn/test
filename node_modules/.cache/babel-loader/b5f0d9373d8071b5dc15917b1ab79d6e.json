{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyewon/react-tutorials/nasa-apod/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyewon/react-tutorials/nasa-apod/src/App.js\";\nimport React, { Component } from 'react';\nimport ViewerTemplate from './components/ViewerTemplate';\nimport SpaceNavigator from './components/SpaceNavigator';\nimport Viewer from './components/Viewer';\nimport * as api from './lib/api';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      maxDate: null,\n      date: null,\n      url: null,\n      mediaType: null\n    };\n\n    _this.getAPOD =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(date) {\n        var response, _response$data, retrievedDate, _url, _mediaType;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this.state.loading) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                //이미 요청중이라면 무시\n                _this.setState({\n                  //로딩 상태 시작\n                  loading: true\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return api.getAPOD(date);\n\n              case 6:\n                response = _context.sent;\n                _response$data = response.data, retrievedDate = _response$data.date, _url = _response$data.url, _mediaType = _response$data.media_type;\n\n                if (!_this.state.maxDate) {\n                  _this.setState({\n                    maxDate: retrievedDate\n                  });\n                }\n\n                _this.setState({\n                  date: retrievedDate,\n                  mediaType: _mediaType,\n                  url: _url\n                });\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 15:\n                _this.setState({\n                  loading: false\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAPOD();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ViewerTemplate, {\n        spaceNavigator: React.createElement(SpaceNavigator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }),\n        viewer: React.createElement(Viewer, {\n          url: url,\n          mediaType: mediaType,\n          loading: loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hyewon/react-tutorials/nasa-apod/src/App.js"],"names":["React","Component","ViewerTemplate","SpaceNavigator","Viewer","api","App","state","loading","maxDate","date","url","mediaType","getAPOD","setState","response","data","retrievedDate","media_type","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,IAAI,EAAE,IAHA;AAINC,MAAAA,GAAG,EAAE,IAJC;AAKNC,MAAAA,SAAS,EAAE;AALL,K;;UAQRC,O;;;;;+BAAU,iBAAOH,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,qBACL,MAAKH,KAAL,CAAWC,OADN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACwB;AAEhC,sBAAKM,QAAL,CAAc;AAAI;AAChBN,kBAAAA,OAAO,EAAE;AADG,iBAAd;;AAHQ;AAAA;AAAA,uBAQiBH,GAAG,CAACQ,OAAJ,CAAYH,IAAZ,CARjB;;AAAA;AAQAK,gBAAAA,QARA;AAAA,iCASmDA,QAAQ,CAACC,IAT5D,EASOC,aATP,kBASCP,IATD,EASsBC,IATtB,kBASsBA,GATtB,EASsCC,UATtC,kBAS0BM,UAT1B;;AAUN,oBAAG,CAAC,MAAKX,KAAL,CAAWE,OAAf,EAAwB;AACtB,wBAAKK,QAAL,CAAc;AACZL,oBAAAA,OAAO,EAAEQ;AADG,mBAAd;AAGD;;AAED,sBAAKH,QAAL,CAAc;AACZJ,kBAAAA,IAAI,EAAEO,aADM;AAEZL,kBAAAA,SAAS,EAATA,UAFY;AAGZD,kBAAAA,GAAG,EAAHA;AAHY,iBAAd;;AAhBM;AAAA;;AAAA;AAAA;AAAA;AAsBNQ,gBAAAA,OAAO,CAACC,GAAR;;AAtBM;AAwBR,sBAAKN,QAAL,CAAc;AACZN,kBAAAA,OAAO,EAAE;AADG,iBAAd;;AAxBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;wCA6BU;AAClB,WAAKK,OAAL;AACD;;;6BAEQ;AACP,aACM,oBAAC,cAAD;AACE,QAAA,cAAc,EAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADlB;AAEE,QAAA,MAAM,EACJ,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEF,GADP;AAEE,UAAA,SAAS,EAAEC,SAFb;AAGE,UAAA,OAAO,EAAEJ,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAYD;;;;EAvDeP,S;;AA0DlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ViewerTemplate from './components/ViewerTemplate';\nimport SpaceNavigator from './components/SpaceNavigator';\nimport Viewer from './components/Viewer';\nimport * as api from './lib/api';\nclass App extends Component {\n  state = {\n    loading: false,\n    maxDate: null,\n    date: null,\n    url: null,\n    mediaType: null\n  }\n\n  getAPOD = async (date) => {\n    if(this.state.loading) return;  //이미 요청중이라면 무시\n    \n    this.setState({   //로딩 상태 시작\n      loading: true\n    });\n\n    try{\n      const response = await api.getAPOD(date);\n      const {date: retrievedDate, url,media_type: mediaType} = response.data;\n      if(!this.state.maxDate) {\n        this.setState({\n          maxDate: retrievedDate\n        })\n      }\n\n      this.setState({\n        date: retrievedDate,\n        mediaType,\n        url\n      });\n    } catch(e) {\n      console.log(e);\n    }\n    this.setState({\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    this.getAPOD();\n  }\n\n  render() {\n    return (\n          <ViewerTemplate \n            spaceNavigator={<SpaceNavigator/>}\n            viewer={(\n              <Viewer\n                url={url}\n                mediaType={mediaType}\n                loading={loading}  \n              />\n            )}\n          />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}