{"ast":null,"code":"import _defineProperty from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyewon/react-tutorials/contact-app/src/components/PhoneInfo.js\";\nimport React, { Component, Fragment } from 'react';\n\nvar PhoneInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PhoneInfo, _Component);\n\n  function PhoneInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PhoneInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PhoneInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      aditing: false,\n      name: '',\n      phone: ''\n    };\n\n    _this.handleRemove = function () {\n      var _this$props = _this.props,\n          info = _this$props.info,\n          onRemove = _this$props.onRemove;\n      onRemove(info.id);\n    };\n\n    _this.handleToggleEdit = function () {\n      //True -> False\n      //onUpdate\n      //False -> ture\n      //state에 info 값을 넣어주기\n      var _this$props2 = _this.props,\n          info = _this$props2.info,\n          onUpdate = _this$props2.onUpdate;\n\n      if (_this.state.editing) {\n        onUpdate(info.id, {\n          name: _this.state.name,\n          phone: _this.state.phone\n        });\n      } else {\n        _this.setState({\n          name: info.name,\n          phone: info.phone\n        });\n      }\n\n      _this.setState({\n        editing: !_this.state.editing\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(PhoneInfo, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state !== nextState) {\n        return true;\n      }\n\n      return this.props.info !== nextProps.info;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$info = this.props.info,\n          name = _this$props$info.name,\n          phone = _this$props$info.phone;\n      var editing = this.state.editing;\n      var style = {\n        border: '1px solid black',\n        padding: '8px',\n        margin: '8px'\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, editing ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"name\",\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"phone\",\n        onChange: this.handleChange,\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, phone)), React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\"), React.createElement(\"button\", {\n        onClick: this.handleToggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, editing ? '적용' : '수정'));\n    }\n  }]);\n\n  return PhoneInfo;\n}(Component);\n\nexport default PhoneInfo;","map":{"version":3,"sources":["/Users/hyewon/react-tutorials/contact-app/src/components/PhoneInfo.js"],"names":["React","Component","Fragment","PhoneInfo","state","aditing","name","phone","handleRemove","props","info","onRemove","id","handleToggleEdit","onUpdate","editing","setState","handleChange","e","target","value","nextProps","nextState","style","border","padding","margin"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nclass PhoneInfo extends Component {\n   \n    state = {\n        aditing: false,\n        name: '',\n        phone: ''\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state !== nextState){\n            return true;\n        }\n        return this.props.info !== nextProps.info;\n    }\n    \n    handleRemove = () => {\n        const {info, onRemove} = this.props;\n        onRemove(info.id);    \n    }\n\n    handleToggleEdit = () => {\n        //True -> False\n            //onUpdate\n        //False -> ture\n            //state에 info 값을 넣어주기\n        const { info, onUpdate } = this.props;\n        if(this.state.editing) {\n            onUpdate(info.id, {\n                name: this.state.name,\n                phone: this.state.phone\n            });\n        } else {\n            this.setState({\n                name: info.name,\n                phone: info.phone,\n            });\n        }\n        this.setState({\n            editing: !this.state.editing,\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        const{ name, phone } = this.props.info;\n        const { editing }  = this.state;\n        const style = {\n            border: '1px solid black',\n            padding: '8px',\n            margin: '8px',\n        };\n        \n        return (\n            <div style={style}>\n                {\n                    editing ? (\n                        <Fragment>\n                            <div>\n                                <input \n                                    name=\"name\"\n                                    onChange={this.handleChange}\n                                    value={this.state.name}\n                                />\n                            </div>\n                            <div>\n                                <input \n                                    name=\"phone\"\n                                    onChange={this.handleChange}\n                                    value={this.state.phone}\n                                />\n                            </div>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <div><b>{name}</b></div>\n                            <div>{phone}</div>\n                        </Fragment>\n                    )\n                }\n                <button onClick={this.handleRemove}>삭제</button>\n                <button onClick={this.handleToggleEdit}>\n                    { editing ? '적용' : '수정' }\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default PhoneInfo;"]},"metadata":{},"sourceType":"module"}