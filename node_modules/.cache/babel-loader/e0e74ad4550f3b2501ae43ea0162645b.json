{"ast":null,"code":"import _defineProperty from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hyewon/react-tutorials/contact-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hyewon/react-tutorials/contact-app/src/components/PhoneInfo.js\";\nimport React, { Component, Fragment } from 'react';\nimport ReactHighcharts from './contact-app/node_modules/react-highcharts/dist/react-highcharts';\n\nvar PhoneInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PhoneInfo, _Component);\n\n  function PhoneInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PhoneInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PhoneInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      aditing: false,\n      name: '',\n      phone: ''\n    };\n\n    _this.handleRemove = function () {\n      var _this$props = _this.props,\n          info = _this$props.info,\n          onRemove = _this$props.onRemove;\n      onRemove(info.id);\n    };\n\n    _this.handleToggleEdit = function () {\n      //True -> False\n      //onUpdate\n      //False -> ture\n      //state에 info 값을 넣어주기\n      var _this$props2 = _this.props,\n          info = _this$props2.info,\n          onUpdate = _this$props2.onUpdate;\n\n      if (_this.state.editing) {\n        onUpdate(info.id, {\n          name: _this.state.name,\n          phone: _this.state.phone\n        });\n      } else {\n        _this.setState({\n          name: info.name,\n          phone: info.phone\n        });\n      }\n\n      _this.setState({\n        editing: !_this.state.editing\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(PhoneInfo, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state !== nextState) {\n        return true;\n      }\n\n      return this.props.info !== nextProps.info;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$info = this.props.info,\n          name = _this$props$info.name,\n          phone = _this$props$info.phone;\n      var editing = this.state.editing;\n      var style = {\n        border: '1px solid black',\n        padding: '8px',\n        margin: '8px'\n      };\n      var container = {\n        minwidth: '310px',\n        maxwidth: '800px',\n        height: '400px',\n        margin: '0 auto'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, editing ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"name\",\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"phone\",\n        onChange: this.handleChange,\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, phone)), React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"\\uC0AD\\uC81C\"), React.createElement(\"button\", {\n        onClick: this.handleToggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, editing ? '적용' : '수정')), React.createElement(\"div\", {\n        style: container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, Highcharts.chart('container', {\n        title: {\n          text: 'Solar Employment Growth by Sector, 2010-2016'\n        },\n        subtitle: {\n          text: 'Source: thesolarfoundation.com'\n        },\n        yAxis: {\n          title: {\n            text: 'Number of Employees'\n          }\n        },\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            },\n            pointStart: 2010\n          }\n        },\n        series: [{\n          name: 'Installation',\n          data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]\n        }, {\n          name: 'Manufacturing',\n          data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]\n        }, {\n          name: 'Sales & Distribution',\n          data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]\n        }, {\n          name: 'Project Development',\n          data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]\n        }, {\n          name: 'Other',\n          data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]\n        }],\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom'\n              }\n            }\n          }]\n        }\n      })));\n    }\n  }]);\n\n  return PhoneInfo;\n}(Component);\n\nexport default PhoneInfo;","map":{"version":3,"sources":["/Users/hyewon/react-tutorials/contact-app/src/components/PhoneInfo.js"],"names":["React","Component","Fragment","ReactHighcharts","PhoneInfo","state","aditing","name","phone","handleRemove","props","info","onRemove","id","handleToggleEdit","onUpdate","editing","setState","handleChange","e","target","value","nextProps","nextState","style","border","padding","margin","container","minwidth","maxwidth","height","Highcharts","chart","title","text","subtitle","yAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","data","responsive","rules","condition","maxWidth","chartOptions"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport ReactHighcharts from './contact-app/node_modules/react-highcharts/dist/react-highcharts';\nclass PhoneInfo extends Component {\n   \n    state = {\n        aditing: false,\n        name: '',\n        phone: ''\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.state !== nextState){\n            return true;\n        }\n        return this.props.info !== nextProps.info;\n    }\n    \n    handleRemove = () => {\n        const {info, onRemove} = this.props;\n        onRemove(info.id);    \n    }\n\n    handleToggleEdit = () => {\n        //True -> False\n            //onUpdate\n        //False -> ture\n            //state에 info 값을 넣어주기\n        const { info, onUpdate } = this.props;\n        if(this.state.editing) {\n            onUpdate(info.id, {\n                name: this.state.name,\n                phone: this.state.phone\n            });\n        } else {\n            this.setState({\n                name: info.name,\n                phone: info.phone,\n            });\n        }\n        this.setState({\n            editing: !this.state.editing,\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    render() {\n        const{ name, phone } = this.props.info;\n        const { editing }  = this.state;\n        const style = {\n            border: '1px solid black',\n            padding: '8px',\n            margin: '8px',\n        };\n\n        const container = {\n            minwidth: '310px',\n\t        maxwidth: '800px',\n\t        height: '400px',\n\t        margin: '0 auto',\n        }\n        \n        return (\n            <div>\n            <div style={style}>\n                {\n                    editing ? (\n                        <Fragment>\n                            <div>\n                                <input \n                                    name=\"name\"\n                                    onChange={this.handleChange}\n                                    value={this.state.name}\n                                />\n                            </div>\n                            <div>\n                                <input \n                                    name=\"phone\"\n                                    onChange={this.handleChange}\n                                    value={this.state.phone}\n                                />\n                            </div>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <div><b>{name}</b></div>\n                            <div>{phone}</div>\n                        </Fragment>\n                    )\n                }\n                <button onClick={this.handleRemove}>삭제</button>\n                <button onClick={this.handleToggleEdit}>\n                    { editing ? '적용' : '수정' }\n                </button>\n            </div>\n\n            <div style={container}>\n                {\n                    Highcharts.chart('container', {\n\n                        title: {\n                            text: 'Solar Employment Growth by Sector, 2010-2016'\n                        },\n\n                        subtitle: {\n                            text: 'Source: thesolarfoundation.com'\n                        },\n\n                        yAxis: {\n                            title: {\n                                text: 'Number of Employees'\n                            }\n                        },\n                        legend: {\n                            layout: 'vertical',\n                            align: 'right',\n                            verticalAlign: 'middle'\n                        },\n\n                        plotOptions: {\n                            series: {\n                                label: {\n                                    connectorAllowed: false\n                                },\n                                pointStart: 2010\n                            }\n                        },\n\n                        series: [{\n                            name: 'Installation',\n                            data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]\n                        }, {\n                            name: 'Manufacturing',\n                            data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]\n                        }, {\n                            name: 'Sales & Distribution',\n                            data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]\n                        }, {\n                            name: 'Project Development',\n                            data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]\n                        }, {\n                            name: 'Other',\n                            data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]\n                        }],\n\n                        responsive: {\n                            rules: [{\n                                condition: {\n                                    maxWidth: 500\n                                },\n                                chartOptions: {\n                                    legend: {\n                                        layout: 'horizontal',\n                                        align: 'center',\n                                        verticalAlign: 'bottom'\n                                    }\n                                }\n                            }]\n                        }\n                    \n                    })\n                 }\n             </div>\n             </div>\n        )\n    }\n        \n}\n\n\nexport default PhoneInfo;"]},"metadata":{},"sourceType":"module"}